# Git Stack - Improvement Ideas

## Interactive Features
- Add `git stack list` command with fzf-based visual selection
- Show branch details and commit messages in preview window
- Interactive stack visualization
- Fuzzy search through stacks and branches

## Smart Detection & Context
- Auto-detect when current branch is part of a stack
- Suggest relevant actions based on context
- Show visual representation of current stack structure
- Detect and warn about potential stack issues

## Stack Status & Overview
- ✅ Add `git stack status` command showing: (COMPLETED)
  - ✅ Current active stack (COMPLETED)
  - ✅ All branches in the stack with latest commits (COMPLETED)
  - Remote sync status for each branch
  - ✅ Conflict detection between stack branches (COMPLETED)
  - ✅ Stack depth and health metrics (COMPLETED)

## Advanced Stack Operations
- `git stack rebase` - Rebase entire stack onto main
- `git stack squash` - Combine all commits in a stack
- ✅ `git stack push` - Push all stack branches in order (COMPLETED)
- `git stack clean` - Remove merged branches from stack
- Undo/redo support for stack operations

## Documentation Improvements
- ✅ Rewrite README with a clear use-case (COMPLETED)
- ✅ Add a visual example of stack workflow (COMPLETED)
- Document common patterns and best practices (COMPLETED)
- ✅ Include a real-world example (COMPLETED)
- Add troubleshooting section
- Add architecture documentation
- Create better usage examples and use cases explaining how to best use it in a normal workflow
- Create command to manage rebasing

## Configuration & Customization
- Customizable branch naming patterns
- Configurable default base branch
- Maximum stack depth settings
- Branch name templates
- Custom stack naming conventions

## CI/CD Integration
- **Smart PR/MR Creation for Stack Branches** (PRIORITY)
  - `git stack pr` - Auto-create GitHub PR targeting correct parent branch
    - Auto-detect current stack position (e.g. feature-2)
    - Calculate parent branch (feature-1, or main if feature-0)
    - Detect `gh` CLI availability
    - Run: `gh pr create -B <parent-branch> [additional-args]`
    - Show confirmation of target branch before creating
  - `git stack mr` - Auto-create GitLab MR targeting correct parent branch
    - Same logic but for `glab` CLI
    - Run: `glab mr create -b <parent-branch> [additional-args]`
  - Enhanced PR/MR descriptions
    - Auto-populate with stack context
    - Show branch hierarchy in description
    - Include stack health status
- Auto-update PR descriptions with stack info
- Stack visualization in PR comments
- CI pipeline integration
- Automated stack health checks

## Safety Features
- Prevent accidental deletion of unpushed branches
- Warn about unmerged changes
- Backup option before destructive operations
- Stack state validation
- Conflict prevention mechanisms

## Future Ideas
- Visual stack representation in terminal
- Stack metrics and analytics
- Multi-remote support
- Stack sharing and collaboration features
- Integration with code review tools 